name: Frontend CI/CD

on:
  pull_request:
    branches: [main]                     # Only run tests on PRs
    paths:
      - 'frontend-app/**'
      - 'app.py'
      - 'requirements.txt'
      - '.github/workflows/frontend.yml'
  push:
    branches: [main]                     # Full pipeline on merge to main
    paths:
      - 'frontend-app/**'
      - 'app.py'
      - 'requirements.txt'
      - '.github/workflows/frontend.yml'
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:6.0                              # official Mongo image
        ports: ["27017:27017"]                        # expose to localhost
        options: >-
          --health-cmd="mongo --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      MONGO_URI: mongodb://mongodb:27017/project5_db  # note “mongodb” host
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with: 
          python-version: '3.12'
      - name: Install dependencies
        run: pip install -r requirements.txt pytest pytest-flask pymongo
      - name: Run tests
        run: pytest -q
        

  push_to_docker_hub:
    if: github.event_name != 'pull_request'  # Skip on PRs
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine image tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            echo "TAG=${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push Frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app:$TAG ./frontend-app
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app:$TAG

  deploy:
    if: github.event_name != 'pull_request'
    needs: push_to_docker_hub
    runs-on: ubuntu-latest
    steps:
      - name: Install doctl CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Trigger DigitalOcean App deployment
        run: doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }}
