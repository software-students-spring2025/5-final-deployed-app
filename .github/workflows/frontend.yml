name: Frontend CI/CD

on:
  pull_request:
    branches: [main]                    # Trigger on any PR to main
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'    # Manual trigger input for tagging images
        required: true

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
      MONGO_URI: mongodb://db:27017/project5_db  # Connection string for MongoDB in tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo apt-get update                    # Update packages
          sudo apt-get install docker-compose -y # Install Docker Compose

      - name: Start services
        run: docker-compose up --build -d       # Build and launch all containers (db + web)

      - name: Wait for MongoDB to be ready
        run: sleep 10                           # Allow time for mongo to fully start

      - name: Install dependencies & run tests
        working-directory: frontend-app
        run: |
          pip install -r ../requirements.txt pytest pytest-flask
          pytest                                 # Execute frontend test suite

  push_to_docker_hub:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}  # Docker Hub username secret
          password: ${{ secrets.DOCKERHUB_TOKEN }}     # Docker Hub token secret

      - name: Build & push DB image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/db:${{ github.event.inputs.version }} ./db
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/db:${{ github.event.inputs.version }}

      - name: Build & push Frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app:${{ github.event.inputs.version }} ./frontend-app
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app:${{ github.event.inputs.version }}

  deploy:
    needs: push_to_docker_hub
    runs-on: ubuntu-latest
    steps:
      - name: Install doctl CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}  # DO API token

      - name: Trigger DigitalOcean App deployment
        run: doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }} # Deploy latest images